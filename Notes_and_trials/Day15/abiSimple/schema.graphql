type Block @entity {
    id: ID!
    number: Int! @index
    timestamp: DateTime!
    transactions: [Transaction!]! @derivedFrom(field: "block")
}

type Transaction @entity {
    id: ID!
    hash: String! @index
    block: Block!
    contract: String
}

interface Event @query {
    id: ID!
    block: Block!
    transaction: Transaction!
    name: String!
}

type MintEvent implements Event @entity {
    id: ID!
    block: Block!
    transaction: Transaction!
    name: String! @index
    to: String! @index
    amount: BigInt!
}

type MintFinishedEvent implements Event @entity {
    id: ID!
    block: Block!
    transaction: Transaction!
    name: String! @index
}

type PauseEvent implements Event @entity {
    id: ID!
    block: Block!
    transaction: Transaction!
    name: String! @index
}

type UnpauseEvent implements Event @entity {
    id: ID!
    block: Block!
    transaction: Transaction!
    name: String! @index
}

type BurnEvent implements Event @entity {
    id: ID!
    block: Block!
    transaction: Transaction!
    name: String! @index
    burner: String! @index
    value: BigInt!
}

type ApprovalEvent implements Event @entity {
    id: ID!
    block: Block!
    transaction: Transaction!
    name: String! @index
    owner: String! @index
    spender: String! @index
    value: BigInt!
}

type TransferEvent implements Event @entity {
    id: ID!
    block: Block!
    transaction: Transaction!
    name: String! @index
    from: String! @index
    to: String! @index
    value: BigInt!
}

interface Function @query {
    id: ID!
    block: Block!
    transaction: Transaction!
    name: String!
}

type ApproveFunction implements Function @entity {
    id: ID!
    block: Block!
    transaction: Transaction!
    name: String! @index
    spender: String
    value: BigInt
}

type TransferFromFunction implements Function @entity {
    id: ID!
    block: Block!
    transaction: Transaction!
    name: String! @index
    from: String
    to: String
    value: BigInt
}

type UnpauseFunction implements Function @entity {
    id: ID!
    block: Block!
    transaction: Transaction!
    name: String! @index
}

type MintFunction implements Function @entity {
    id: ID!
    block: Block!
    transaction: Transaction!
    name: String! @index
    to: String
    amount: BigInt
}

type BurnFunction implements Function @entity {
    id: ID!
    block: Block!
    transaction: Transaction!
    name: String! @index
    value: BigInt
}

type FinishMintingFunction implements Function @entity {
    id: ID!
    block: Block!
    transaction: Transaction!
    name: String! @index
}

type PauseFunction implements Function @entity {
    id: ID!
    block: Block!
    transaction: Transaction!
    name: String! @index
}

type TransferFunction implements Function @entity {
    id: ID!
    block: Block!
    transaction: Transaction!
    name: String! @index
    to: String
    value: BigInt
}

type TransferOwnershipFunction implements Function @entity {
    id: ID!
    block: Block!
    transaction: Transaction!
    name: String! @index
    newOwner: String
}
